{"ast":null,"code":"var _jsxFileName = \"/home/developer/example_7_react/crud_front/src/components/PostList.jsx\",\n  _s = $RefreshSig$();\n// PostsList.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = ({\n  post\n}) => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: post.content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `showlist/${post.id}`,\n      className: \"btn btn-primary\",\n      children: \"Show Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleDelete(post),\n      className: \"btn btn-danger\",\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this)]\n}, post.id, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n_c = Post;\nconst handleDelete = async post => {\n  try {\n    // Make a DELETE request to delete the post\n    await axios.delete(`http://localhost:3001/api/posts/${post.id}`);\n    // Call the index to update the post list\n    handleDeletePost();\n  } catch (error) {\n    console.error('Error deleting post:', error);\n    // Handle the error as needed\n  }\n};\nconst handleDeletePost = () => {\n  /*#__PURE__*/_jsxDEV(Link, {\n    to: '/'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n};\nconst PostsList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch all posts from your API using Axios\n    axios.get('http://localhost:3001/api/posts').then(response => {\n      setPosts(response.data);\n    }).catch(error => {\n      setError(error);\n    });\n  }, []); // Run this effect only once when the component mounts\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/addpost\",\n      className: \"btn btn-primary\",\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(PostsList, \"k/i6/CQ9z/20h34rTderKnfEXI4=\");\n_c2 = PostsList;\nexport default PostsList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"PostsList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","Post","post","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","to","id","className","onClick","handleDelete","_c","delete","handleDeletePost","error","console","PostsList","_s","posts","setPosts","setError","get","then","response","data","catch","message","scope","map","_c2","$RefreshReg$"],"sources":["/home/developer/example_7_react/crud_front/src/components/PostList.jsx"],"sourcesContent":["// PostsList.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst Post = ({ post }) => (\n  <tr key={post.id}>\n    <td><strong>{post.title}</strong></td>\n    <td>{post.content}</td>\n    <td>\n      <Link to={`showlist/${post.id}`} className=\"btn btn-primary\">\n        Show Post\n      </Link>\n\n      <button onClick={() => handleDelete(post)} className=\"btn btn-danger\">\n       Delete\n      </button>\n    </td>\n    \n    \n  </tr>\n);\n\n\n  const handleDelete = async (post) => {\n    try {\n      // Make a DELETE request to delete the post\n      await axios.delete(`http://localhost:3001/api/posts/${post.id}`);\n      // Call the index to update the post list\n      handleDeletePost();\n      \n    } catch (error) {\n      console.error('Error deleting post:', error);\n      // Handle the error as needed\n    }\n\n}\n\nconst handleDeletePost =()=>{\n  <Link to={'/'}></Link>\n  \n}\n\nconst PostsList = () => {\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Fetch all posts from your API using Axios\n    axios.get('http://localhost:3001/api/posts')\n      .then(response => {\n        setPosts(response.data);\n        \n      })\n      .catch(error => {\n        setError(error);\n        \n      });\n  }, []); // Run this effect only once when the component mounts\n\n  if (error) {\n    return <p>Error: {error.message}</p>;\n  }\n\n\n  \n\n  return (\n    <div>\n      <h2>All Posts</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Title</th>\n            <th scope=\"col\">Content</th>\n            <th scope=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {posts.map(post => (\n            <Post key={post.id} post={post} />\n          ))}\n        </tbody>\n      </table>\n\n      <Link to=\"/addpost\" className=\"btn btn-primary\">\n        Add Post\n      </Link>\n    </div>\n  );\n};\n\nexport default PostsList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}