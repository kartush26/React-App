{"ast":null,"code":"var _jsxFileName = \"/home/developer/example_7_react/crud_front/src/components/PostList.jsx\",\n  _s = $RefreshSig$();\n// PostsList.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport SinglePost from './SinglePost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = ({\n  post,\n  onShowPost\n}) => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: post.content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onShowPost(post),\n      className: \"btn btn-primary\",\n      children: \"Show Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)]\n}, post.id, true, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n_c = Post;\nconst PostsList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showSinglePost, setShowSinglePost] = useState(null);\n  useEffect(() => {\n    // Fetch all posts from your API using Axios\n    axios.get('http://localhost:3001/api/posts').then(response => {\n      setPosts(response.data);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, []); // Run this effect only once when the component mounts\n\n  const handleShowPost = post => {\n    setShowSinglePost(post);\n  };\n  const handleClosePost = () => {\n    setShowSinglePost(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n          post: post,\n          onShowPost: handleShowPost\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), showSinglePost && /*#__PURE__*/_jsxDEV(SinglePost, {\n      post: showSinglePost,\n      onClose: handleClosePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/addpost\",\n      className: \"btn btn-primary\",\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(PostsList, \"W86cIfr7RiSUsynZC3o4nKKIJ68=\");\n_c2 = PostsList;\nexport default PostsList;\nvar _c, _c2;\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"PostsList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","SinglePost","jsxDEV","_jsxDEV","Post","post","onShowPost","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","onClick","className","id","_c","PostsList","_s","posts","setPosts","loading","setLoading","error","setError","showSinglePost","setShowSinglePost","get","then","response","data","catch","handleShowPost","handleClosePost","message","scope","map","onClose","to","_c2","$RefreshReg$"],"sources":["/home/developer/example_7_react/crud_front/src/components/PostList.jsx"],"sourcesContent":["// PostsList.js\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport SinglePost from './SinglePost';\n\nconst Post = ({ post, onShowPost }) => (\n  <tr key={post.id}>\n    <td><strong>{post.title}</strong></td>\n    <td>{post.content}</td>\n    <td>\n      <button onClick={() => onShowPost(post)} className=\"btn btn-primary\">\n        Show Post\n      </button>\n    </td>\n  </tr>\n);\n\nconst PostsList = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showSinglePost, setShowSinglePost] = useState(null);\n\n  useEffect(() => {\n    // Fetch all posts from your API using Axios\n    axios.get('http://localhost:3001/api/posts')\n      .then(response => {\n        setPosts(response.data);\n        setLoading(false);\n      })\n      .catch(error => {\n        setError(error);\n        setLoading(false);\n      });\n  }, []); // Run this effect only once when the component mounts\n\n  const handleShowPost = (post) => {\n    setShowSinglePost(post);\n  };\n\n  const handleClosePost = () => {\n    setShowSinglePost(null);\n  };\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (error) {\n    return <p>Error: {error.message}</p>;\n  }\n\n  return (\n    <div>\n      <h2>All Posts</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Title</th>\n            <th scope=\"col\">Content</th>\n            <th scope=\"col\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {posts.map(post => (\n            <Post key={post.id} post={post} onShowPost={handleShowPost} />\n          ))}\n        </tbody>\n      </table>\n\n      {showSinglePost && (\n        <SinglePost post={showSinglePost} onClose={handleClosePost} />\n      )}\n\n      <Link to=\"/addpost\" className=\"btn btn-primary\">\n        Add Post\n      </Link>\n    </div>\n  );\n};\n\nexport default PostsList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}